<!DOCTYPE html>
<html>
    <head>
        <title>Snake HTML Game</title>
        <meta charset="UTF-8">
        <style>
            html, body {
                height: 100%;
                margin: 0;
            }

            body {
                background: rgb(141, 108, 108);
                display: flex;
                align-items: center;
                justify-content: center;
                flex-direction: column;
            }

            canvas {
                border: 1px solid white;
            }

            .button-container {
                margin-top: 20px;
                display: flex;
                gap: 10px;
            }

            button {
                padding: 10px 20px;
                font-size: 18px;
                cursor: pointer;
            }

            #startButton {
                display: none; 
            }

            #score {
                margin-right: 550px;
                font-size: 18px;
                color: rgb(255, 255, 255);
            }

            #gameOverMessage {
                font-size: 24px;
                color: rgb(255, 170, 0);
            }
        </style>
    </head>
    
    <body>
        <!-- where the game is drawn, canvas for graphics -->
        <canvas width="400" height="400" id="snake"></canvas>
        <div class="button-container">
            <button id="startButton">START GAME</button>
            <button id="pauseButton" style="display: none;">PAUSE GAME</button>
        </div>
        <div id="score">Apples Eaten: 0</div>
        <div id="gameOverMessage">Game Over</div>
        
        
        <script>
        var canvas = document.getElementById('snake');
        var context = canvas.getContext('2d');
        var startButton = document.getElementById('startButton');
        var pauseButton = document.getElementById('pauseButton');
        var scoreDisplay = document.getElementById('score');
        var gameOverMessage = document.getElementById('gameOverMessage');

        
        //Game variables
        var grid = 16; 
        var count = 0;
        var isGameRunning = false;
        var isGamePaused = false;
        var appleCount = 0;


        //Snake placement
        var snake = {
            x: 160,
            y: 160,
            dx: grid,
            dy: 0,
            cells: [],
            maxCells: 3
        };


        //Apple placement
        var apple = {
            x: 320,
            y: 320
        };


        //Random apple positioning
        function getRandomInt(min, max) {
            return Math.floor(Math.random() * (max - min)) + min;
        }


        //Game loop function
        function loop() {
            if (!isGameRunning || isGamePaused) return;

            requestAnimationFrame(loop);

            //speed of snake
            if (++count < 5) return;
            count = 0;

            //clears canvas for new frame
            context.clearRect(0, 0, canvas.width, canvas.height);

            //snake position
            snake.x += snake.dx;
            snake.y += snake.dy;

            //Wrap snake on screen edges without dying
            if (snake.x < 0) snake.x = canvas.width - grid;
            else if (snake.x >= canvas.width) snake.x = 0;
            if (snake.y < 0) snake.y = canvas.height - grid;
            else if (snake.y >= canvas.height) snake.y = 0;

            snake.cells.unshift({x: snake.x, y: snake.y});
            if (snake.cells.length > snake.maxCells) snake.cells.pop();

            //Draw apple
            context.fillStyle = 'red';
            context.fillRect(apple.x, apple.y, grid - 1, grid - 1);

            //Draw snake
            context.fillStyle = 'green';
            snake.cells.forEach(function(cell, index) {
                context.fillRect(cell.x, cell.y, grid - 1, grid - 1);

                //Check if apple is eaten
                if (cell.x === apple.x && cell.y === apple.y) {
                    snake.maxCells++; //snake size +
                    appleCount++; //apple count +
                    scoreDisplay.textContent = "Apples Eaten: " + appleCount; // Update display

                    //Reposition apple
                    apple.x = getRandomInt(0, 25) * grid;
                    apple.y = getRandomInt(0, 25) * grid;
                }

                //if the snake bites itself
                for (var i = index + 1; i < snake.cells.length; i++) {
                    if (cell.x === snake.cells[i].x && cell.y === snake.cells[i].y) {
                        gameOver(); // Trigger game over
                        return;
                    }
                }
            });
        }


        //Keyboard control
        document.addEventListener('keydown', function(e) {
            //left arrow
            if (e.which === 37 && snake.dx === 0) {
                snake.dx = -grid;
                snake.dy = 0;
            }

            //up arrow
            else if (e.which === 38 && snake.dy === 0) {
                snake.dy = -grid;
                snake.dx = 0;
            }

            //right arrow
            else if (e.which === 39 && snake.dx === 0) {
                snake.dx = grid;
                snake.dy = 0;
            }

            //down arrow
            else if (e.which === 40 && snake.dy === 0) {
                snake.dy = grid;
                snake.dx = 0;
            }
        });


        //Start game
        function startGame() {
            isGameRunning = true;
            isGamePaused = false;
            startButton.style.display = 'none';
            pauseButton.style.display = 'inline-block';
            gameOverMessage.style.display = 'none'; //Hide Game Over message
            appleCount = 0; //Reset apple count
            scoreDisplay.textContent = "Apples Eaten: " + appleCount; //Reset display
            snake.x = 160;
            snake.y = 160;
            snake.cells = [];
            snake.maxCells = 3;
            snake.dx = grid;
            snake.dy = 0;
            apple.x = getRandomInt(0, 25) * grid;
            apple.y = getRandomInt(0, 25) * grid;
            requestAnimationFrame(loop);
        }


        //Game over function
        function gameOver() {
            isGameRunning = false;
            isGamePaused = false;
            startButton.style.display = 'block';
            pauseButton.style.display = 'none';
            gameOverMessage.style.display = 'block'; //Show Game Over message
        }


        //Pause game function
        function togglePause() {
            if (!isGameRunning) return; //change nothing

            isGamePaused = !isGamePaused;
            //updates the text
            pauseButton.textContent = isGamePaused ? "RESUME GAME" : "PAUSE GAME";
            if (!isGamePaused) loop(); //Resume game loop
        }

        //Event listeners for buttons
        startButton.addEventListener('click', startGame);
        pauseButton.addEventListener('click', togglePause);

        //start game/pause button
        startGame();
        </script>
    </body>
</html>
